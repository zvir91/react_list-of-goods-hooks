{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortField","setSortField","isReversed","setReverse","goods","preparedGoods","sort","good1","good2","NAME","localeCompare","LENGTH","length","reverse","getPreparedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAqBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,gBAAAA,E,aAAAA,M,KA+BE,IAAME,EAAgB,WAC3B,MAAkCC,mBAAsB,IAAxD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAiCF,oBAAkB,GAAnD,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA7BR,SACEA,EACAJ,EACAE,GAEA,IAAMG,EAAa,YAAOD,GAkB1B,OAhBAC,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKJ,EAASa,KACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKZ,EAASe,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITV,GACFG,EAAcQ,UAGTR,EAMOS,CACZjB,EAAiBG,EAAWE,GAG9B,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,WACPf,EAAaL,EAASa,OAExBQ,KAAK,SACLF,UACEG,IAAG,iBAAkB,CAAE,WAAYlB,IAAcJ,EAASa,OAN9D,iCAYA,wBACEO,QAAS,WACPf,EAAaL,EAASe,SAExBM,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,WAAYlB,IAAcJ,EAASe,SANzC,4BAWA,wBACEK,QAAS,WACPb,GAAYD,IAEde,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,YAAahB,IANnB,sBAWEF,GAAaE,IACb,wBACEc,QAAS,WACPf,EAAa,IACbE,GAAW,IAEbc,KAAK,SACLF,UAAWG,IAAG,mBACZ,CAAE,WAAYlB,IAPlB,sBAcJ,6BACGI,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC9GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f1ae0083.chunk.js","sourcesContent":["// import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { useState } from 'react';\n\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  LENGTH = 'length',\n  NAME = 'name',\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortField: string | null,\n  isReversed: boolean,\n) {\n  const preparedGoods = [...goods];\n\n  preparedGoods.sort((good1, good2) => {\n    switch (sortField) {\n      case SortType.NAME:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<string | ''>('');\n  const [isReversed, setReverse] = useState<boolean>(false);\n  const goods = getPreparedGoods(\n    goodsFromServer, sortField, isReversed,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => {\n            setSortField(SortType.NAME);\n          }}\n          type=\"button\"\n          className={\n            cn('button is-info', { 'is-light': sortField !== SortType.NAME })\n          }\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => {\n            setSortField(SortType.LENGTH);\n          }}\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortField !== SortType.LENGTH })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            setReverse(!isReversed);\n          }}\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': !isReversed })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            onClick={() => {\n              setSortField('');\n              setReverse(false);\n            }}\n            type=\"button\"\n            className={cn('button is-danger',\n              { 'is-light': sortField })}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}